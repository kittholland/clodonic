name: Deploy to Cloudflare Workers

on:
  push:
    branches:
      - main
    paths:
      - 'clodonic-api/**'
      - '.github/workflows/deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'clodonic-api/**'
  workflow_dispatch:

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clodonic-api
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: clodonic-api/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Type check
        run: npm run typecheck || true
      
      - name: Run tests
        run: npm test || true
        continue-on-error: true

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: clodonic-api
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: clodonic-api/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy to preview
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: clodonic-api
          command: deploy --env preview
      
      - name: Comment preview URL
        uses: actions/github-script@v7
        with:
          script: |
            const url = `https://preview.clodonic-api.workers.dev`;
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ Preview deployed to: ${url}`
            });

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: https://clodonic.ai
    defaults:
      run:
        working-directory: clodonic-api
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: clodonic-api/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Deploy to production
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: clodonic-api
          command: deploy
          secrets: |
            GITHUB_CLIENT_ID
            GITHUB_CLIENT_SECRET
        env:
          GITHUB_CLIENT_ID: ${{ secrets.GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GITHUB_CLIENT_SECRET }}
      
      - name: Verify deployment
        run: |
          echo "Waiting for deployment to propagate..."
          sleep 10
          curl -f https://clodonic.ai/api/health || exit 1
          echo "Deployment verified successfully!"
      
      - name: Create deployment record
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              description: 'Deployed to Cloudflare Workers',
              auto_merge: false,
              required_contexts: [],
              production_environment: true
            });

  rollback:
    name: Rollback Production
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: production-rollback
    defaults:
      run:
        working-directory: clodonic-api
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      - name: Install dependencies
        run: npm ci
      
      - name: List deployments
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: clodonic-api
          command: deployments list
      
      - name: Rollback to previous
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: clodonic-api
          command: rollback --message "Manual rollback from GitHub Actions"